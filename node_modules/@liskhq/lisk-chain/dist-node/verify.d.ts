import { DataAccess } from './data_access';
import { BlockHeader, Block, GenesisBlock } from './types';
import { StateStore } from './state_store';
import { Slots } from './slots';
export declare const verifyBlockNotExists: (dataAccess: DataAccess, block: Block<import("./types").BlockHeaderAsset>) => Promise<void>;
export declare const verifyPreviousBlockId: (block: Block<import("./types").BlockHeaderAsset>, lastBlock: Block<import("./types").BlockHeaderAsset>) => void;
export declare const matchGenesisBlock: (genesisBlock: GenesisBlock<import("./types").AccountDefaultProps>, block: BlockHeader<import("./types").BlockHeaderAsset>) => boolean;
export declare const verifyBlockGenerator: (header: BlockHeader<import("./types").BlockHeaderAsset>, slots: Slots, stateStore: StateStore) => Promise<void>;
export declare const isValidSeedReveal: (blockHeader: BlockHeader<import("./types").BlockHeaderAsset>, stateStore: StateStore, numberOfValidators: number) => boolean;
export declare const verifyReward: (blockHeader: BlockHeader<import("./types").BlockHeaderAsset>, stateStore: StateStore, numberOfValidators: number) => void;
